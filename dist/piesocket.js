var PieSocket;PieSocket=(()=>{var e={186:(e,n,o)=>{"use strict";o.d(n,{default:()=>i});class s{constructor(e){this.endpoint=e,this.connection=this.connect(),this.events={}}connect(){var e=new WebSocket(this.endpoint);return e.onmessage=this.onMessage.bind(this),e.onopen=this.onOpen.bind(this),e.onerror=this.onError.bind(this),e.onclose=this.onClose.bind(this),e}on(e,n){this.events[e]=n}onMessage(e){console.log("Channel message:",e),this.events.message&&this.events.message(e)}onOpen(e){console.log("Channel connected:",e),this.events.open&&this.events.open(e)}onError(e){console.error("Channel error:",e),this.events.error&&this.events.error(e)}onClose(e){console.warn("Channel closed:",e),this.events.close&&this.events.close(e)}}const t={version:3,cluster_id:"demo",api_key:"oCdCMcMPQpbvNjUIzqtvF1d2X2okWpDQj4AwARJuAgtjhzKxVEjQU6IdCjwm"};class i{constructor(e){e=e||{},this.options={...t,...e},this.connections={},console.log(this.options)}subscribe(e){var n=this.getEndpoint(e);if(this.connections[e])return console.log("Returning existing channel",n),this.connections[e];console.log("Creating new channel",n);var o=new s(n);return this.connections[e]=o,o}getEndpoint(e){return`wss://${this.options.cluster_id}.websocket.me/v${this.options.version}/${e}?api_key=${this.options.api_key}`}}},138:(e,n,o)=>{e.exports=o(186).default}},n={};function o(s){if(n[s])return n[s].exports;var t=n[s]={exports:{}};return e[s](t,t.exports,o),t.exports}return o.d=(e,n)=>{for(var s in n)o.o(n,s)&&!o.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:n[s]})},o.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),o(138)})();